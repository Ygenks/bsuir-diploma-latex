* Титульник
** Аппаратная система обработки видеопотока
* Введение
** Актуальность
*** Задачи обработки видео

    Решение многих задач в науке и инженерии требует обработки различного рода данных, одними из которых являются изображения.
    Задачами обработки изображений занимается целая наука -- Цифровая Обработка Сигналов(ЦОС),
    изображения в которой рассматриваются как особый класс многомерных сигналов.

    Высокая стоимость вычислительной техники в 1960-1970-ых годах ограничивала применение
    цифровых методов обработки сферами национальной безопасности, медициной, исследованием космоса.
    Появление персональных компьютеров дало толчок в развитии ЦОС -- конечные пользователи
    получили возможность решать задачи связанные с обработкой сигналов прямо на домашнем ПК,
    при помощи различных решений.

    Обработка изображений в контексте ЦОС несет в себе ряд особенностей.
    Во-первых, изображения характеризуются изменением пространственных параметров,
    тогда как звуковые сигналы описываются изменением временных параметров.
    Во-вторых, объёмы информации, содержащиеся в изображениях, очень велики.
    Например, видеопоток несжатого RGB видео с разрешением 1280х720 пикселей и частотой 50 кадров в секунду
    занимает \[1280 * 720 * 3 * 50 = 138.24 MB] памяти, когда как одна секунда
    двуканального аудиосигнала с частотой дискретизации 44100 герц занимает
    \[44100 * 2 = 0.0882 MB], что в \[1567] раз больше.
    В-третьих, при оценке качества изображения субъективная оценка доминирует над объективными критериями.

    Современные методы обработки изображений делятся на две категории: программная и аппаратная обработка.

    Программная обработка производится на базе центрального проессора (CPU) и отличается высокой эффективностью
    при использовании последовательных алгоритмов. В задачах с высоким Data Level Parallelism по обработке гомогенных данных
    центральный процессор значительно проигрывает более специализированным решениям,
    из-за малого количества SIMD блоков для параллельной обработки данных.

    Комбинация программных и аппаратных подходов лежит в основе обработки изображений на графическом процессоре (GPU).
    Связка графического процессора и SDK для его программирования образует GPGPU (General-Purpose computing for GPU).
    GPGPU основна на прицнипе SIMT, основанный на разделении задачи на несколько подзадач того же типа, но меньшего размера,
    решаемые каждым потоком GPU по отдельности.
    Такой подход является удачной комбинацией скорости разработки программы и специализации графического процессора
    на параллельной обработке данных.
    Однако есть и существенные ограничения.
    Латентность при обработке изображений на GPU слабодетерменирована, что усложняет использование GPGPU
    в системах реального времени [[https://indico.cern.ch/event/390748/contributions/1825182/attachments/1281597/1904188/CR_1_63.pdf][ссылка]]. Отсутствует выбор периферийного интерфейса -- на момент написания,
    графический процессоры подключаются исключительно по PCIe, сильно ограничивая перечень устройств.
    Соотношение производительности на ватт затрудняет применение во встраиваемых системах с автономным питанием [[http://www.gstitt.ece.ufl.edu/courses/fall11/eel4930_5934/reading/sliding_window_fpga12.pdf][ссылка]].

    ASIC, как наиболее специализированное на конкретной задаче решение,
    выполняет обработку за минимально возможное время и с минимальным энергопотреблением.
    Разработка специализированной интегральной схемы связана с существенными затратами
    на проектирование -- окупаемость наступает лишь при выпуске партиями в несколько сотен тысяч единиц,
    исключая возможность применения технологии малыми и средними предприятиями. [[http://anysilicon.com/fpga-vs-asic-choose/][ссылка]]

    Применение FPGA позволяет достичь баланса между производительностью и конфигурируемостью конечного решения.
    По сравнению с ASIC единовременные затраты на проектирование на несколько порядков ниже,
    что идеально подходит для прототипирования и мелкосерийного производства.[[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.458.4752&rep=rep1&type=pdf][ссылка]]
    В отличие от GPU малое энергопотребление и небольшие размеры решений на FPGA прекрасно подходят
    для встраиваемых систем. [[http://www.bertendsp.com/pdf/whitepaper/BWP001_GPU_vs_FPGA_Performance_Comparison_v1.0.pdf][ссылка]]
    Последовательные алгоритмы, непригодные для реализации на GPU, могут выполняться
    на интегрированом CPU или soft core процессоре, заметно упрощая передачу данных
    между последовательным и параллельным вычислителем, решая подобную задачу
    для связки GPU и CPU.

    # Распухло, срочно скинуть в обзор

    
    # Программные методы обработки хорошо показывают себя в последовательных алгоритмах,
    # отличаются гибкостью внесений изменений в алгоритм,
    # наличием большим количеством готовых решений в виде сторонних библиотек.
    # Однако данные методы не показывают высокой производительности в
    # задачах с значительным параллелизомом по данным, так как количество блоков для параллельных операций
    # достаточно мало даже в современных CPU()

    # Выбор итогового решения зависит от характеристики решаемой задачи:
    # 1. Размеры обрабатываемого изображения
    # 2. Требуемая производительность
    # 3. Затраты по памяти
    # 4. Необходимость обработки в реальном времени
    # 5. Энергоэффективность


*** Современные подходы по обработке изображений
*** Сравнение скорости существующих программных решений для real time
*** Как вывод -- всё очень медленное, нужно решать проблему аппаратно
*** Аппаратные реализации от вендоров часто заточены под конкретные задачи
*** Как следствие -- необходимость в гибкой модульной системе
*** Гибкая аппаратная система -- MCU с DSP модулями или FPGA
*** А лучше всего MCU внутри FPGA
** Цель
   Целью данного дипломного проекта является проектирование и реализация аппаратной системы обработки видеопотока на микросхемах FPGA,
   с поддержкой доабвления модулей обработки видео и выводом обработанного потока на HDMI интерфейс.
   Предназначена для применения в ресурсоёмких задачах, обработке видео в системах реального времени, встраиваемых системах.

** Задачи
*** Проанализировать возможные подходы к решению проблемы
*** Учесть в разработке модульность проекта(возможность понавставлять модулей обработки в пайплайн)
*** Разработать подсистему передачи видео CMOS камеры в RAM устройства
*** Разработать систему передачи видео из RAM устройства на HDMI интерфейс
** Какая выбрана плисина
** Какие видеоинтерфейсы можно использовать
** Какой выбран интерфейс
* Обзор литературы
** FPGA (под вопросом)
*** Устройство
*** Прицнип работы
*** Семейства
*** Сравнение вендоров
** Artix 7
*** [[https://www.xilinx.com/support/documentation/data_sheets/ds180_7Series_Overview.pdf][Artix-7 overview]]
** AC701
*** [[https://www.xilinx.com/support/documentation/boards_and_kits/ac701/ug952-ac701-a7-eval-bd.pdf][AC701 user guide]]
** Обзор видеоинтерфейсов
*** VGA
*** Display port
*** HDMI
**** Описание протокола
**** Принцип работы
**** [[http://www.analog.com/media/en/technical-documentation/data-sheets/ADV7511.pdf][Datasheet]]
**** [[http://www.analog.com/media/en/technical-documentation/user-guides/ADV7511_Hardware_Users_Guide.pdf][User guide]]
** Обзоры камер
*** CMOS
*** CCD
** DDR
*** Описание
*** Принцип работы
*** Сравнение поколений
** Microblaze
*** Описание архитектуры
*** [[https://www.xilinx.com/support/documentation/sw_manuals/mb_ref_guide.pdf][Reference guide]]
